
#
# WepSIM (https://wepsim.github.io/wepsim/)
#

.text
main:
           # notify: skip1st:true showas:offcanvas glow:btn_run_stop_exebar1 scroll2current:true showdetails:register_file
           # notify: for (x1=0; x1 != 5; x1++)
           # notify: High-level:
           # notify: * for (x1=0; x1 != 5; x1++) { ... }
           # notify: Low-level:
           # notify: *            li counter1 initial-value
           # notify: *            li counter2 last-value
           # notify: * beg_label: beq counter1 counter2 end_label
           # notify: *            ...
           # notify: *            update counter1
           # notify: *            branch beg_label
           # notify: * end_label:

           li  x1  0
           li  x2  5
    loop1: beq x1 x2 end1
           # {
           #   ...
               addi x1 x1 1
               beq x0 x0 loop1
           # }

    end1:


           # notify: skip1st:true showas:offcanvas glow:btn_run_stop_exebar1 scroll2current:true showdetails:register_file
           # notify: for (x1=0; x1 < 5; x1++)
           # notify: High-level:
           # notify: * for (x1=0; x1 < 5; x1++) { ... }
           # notify: Low-level:
           # notify: *            li counter1 initial-value
           # notify: *            li counter2 last-value
           # notify: * beg_label: beq counter1 counter2 end_label
           # notify: *            ...
           # notify: *            update counter1
           # notify: *            branch beg_label
           # notify: * end_label:

           li  x1  0
           li  x2  5
    loop2: bge x1 x2 end2
           # {
           #   ...
               addi x1 x1 1
               beq x0 x0 loop2
           # }

    end2:


           # notify: skip1st:true showas:offcanvas glow:btn_run_stop_exebar1 scroll2current:true showdetails:register_file
           # notify: for (x1=0; x1 <= 5; x1++)
           # notify: High-level:
           # notify: * for (x1=0; x1 <= 5; x1++) { ... }
           # notify: Low-level:
           # notify: *            li counter1 initial-value
           # notify: *            li counter2 last-value
           # notify: * beg_label: bgt counter1 counter2 end_label
           # notify: *            ...
           # notify: *            update counter1
           # notify: *            branch beg_label
           # notify: * end_label:

           li  x1  0
           li  x2  5
    loop3: bgt x1 x2 end3
           # {
           #   ...
               addi x1 x1 1
               beq x0 x0 loop3
           # }


     end3: jr ra

